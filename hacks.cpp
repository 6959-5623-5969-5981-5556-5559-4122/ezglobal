#include "Hacks.h"




void Hacks::MoveHacks(CUserCmd * pCmd, bool & bSendPacket)
{
	Vector origView = pCmd->viewangles;
	C_BaseEntity *pLocal = hackManager.pLocal();
	hackManager.Move(pCmd, bSendPacket);



}
HackManager hackManager;
C_BaseEntity* HackManager::pLocal()
{
	return pLocalInstance;
}
void HackManager::RegisterHack(CHack* hake)
{
	Hacks.push_back(hake);
	hake->Init();
}


void HackManager::Draw()
{
	if (!IsReady)
		return;

	pLocalInstance = g_EntityList->GetClientEntity(g_Engine->GetLocalPlayer());
	if (!pLocalInstance) return;

	for (auto &hack : Hacks)
	{
		hack->Draw();
	}
}

void HackManager::Move(CUserCmd *pCmd, bool &bSendPacket)
{
	if (!IsReady)
		return;

	pLocalInstance = g_EntityList->GetClientEntity(g_Engine->GetLocalPlayer());
	if (!pLocalInstance) return;

	for (auto &hack : Hacks)
	{
		hack->Move(pCmd, bSendPacket);
	}
}



void HackManager::Ready()
{
	IsReady = true;
}















































































































































































































































































































































































































